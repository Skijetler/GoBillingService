// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/Skijetler/GoBillingService/pkg/ent/account"
	"github.com/Skijetler/GoBillingService/pkg/ent/schema"
	"github.com/Skijetler/GoBillingService/pkg/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescAmount is the schema descriptor for amount field.
	accountDescAmount := accountFields[1].Descriptor()
	// account.DefaultAmount holds the default value on creation for the amount field.
	account.DefaultAmount = accountDescAmount.Default.(int64)
	// accountDescFrozen is the schema descriptor for frozen field.
	accountDescFrozen := accountFields[3].Descriptor()
	// account.DefaultFrozen holds the default value on creation for the frozen field.
	account.DefaultFrozen = accountDescFrozen.Default.(bool)
	// accountDescID is the schema descriptor for id field.
	accountDescID := accountFields[0].Descriptor()
	// account.DefaultID holds the default value on creation for the id field.
	account.DefaultID = accountDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescDisabled is the schema descriptor for disabled field.
	userDescDisabled := userFields[4].Descriptor()
	// user.DefaultDisabled holds the default value on creation for the disabled field.
	user.DefaultDisabled = userDescDisabled.Default.(bool)
}
